#include "NXCDefs.h"
#define NEAR 15 //cm
#define __NOTETIME   10
#define __WAITTIME   12

task turnleftA()
{
     RotateMotor(OUT_A, 70, -190);
}
task turnleftC()
{
     RotateMotor(OUT_C, 70, 190);
}
task turnrightA()
{
     RotateMotor(OUT_A, 70, 190);
}
task turnrightC()
{
     RotateMotor(OUT_C, 70, -190);
}
task turnaroundA()
{
     RotateMotor(OUT_A, 70, 360);
}
task turnaroundC()
{
     RotateMotor(OUT_C, 70, -360);
}

mutex moveMutex;

task move_fwd()
{

 OnFwdReg(OUT_AC, 75, OUT_REGMODE_SYNC);

 while(SensorUS(IN_4)>NEAR)
 {
      //turn_right();
      Wait(2000);
      //turn_left();
 }
}

sub hitta()
{

    int s=SensorUS(IN_4);
    while(s>60)
    {
    OnFwd(OUT_C, 70);
    OnRev(OUT_A, 70);
    s=SensorUS(IN_4);
    NumOut(4, LCD_LINE1, SensorUS(IN_4));
    }

Off(OUT_AC);
/*
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
 */
 int v=SensorUS(IN_4);
 OnFwd(OUT_C, 50);
 OnRev(OUT_A, 50);
 Wait(1000);
 Off(OUT_AC);
 int h=SensorUS(IN_4);

     while(v>h&&v!=h)
     {
     PlayTone(349,4*__NOTETIME);
     Wait(4*__WAITTIME);
     OnFwd(OUT_C, 50);
     OnRev(OUT_A, 50);
     Wait(700);
     Off(OUT_AC);
     v = h;
     h = SensorUS(IN_4);
     NumOut(10, LCD_LINE2, v);
     NumOut(10, LCD_LINE3, h);
     }
  
  OnFwd(OUT_C, 50);
  OnRev(OUT_A, 50);
  Wait(500);
  Off(OUT_AC);
  
  NumOut(10, LCD_LINE2, v);
  NumOut(10, LCD_LINE3, h);
  Wait(2000);

}

inline void avl()//Avlämning av bok
{
       RotateMotor(OUT_B, 20, -150);
       //OnRevReg(OUT_AC, 50, OUT_REGMODE_SYNC);
       Wait(1000);
       //Off(OUT_AC);
       RotateMotor(OUT_B, 20, 150);
}

inline void paket1()   // Höger 2.5m
{
     Precedes(turnrightA, turnrightC);
     OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
     Wait(4000);
     Off(OUT_AC);
     avl();
    //klar
}

inline int paket2()   // Vänster 2.5m
{
      Precedes(turnleftA, turnleftC);
      OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
      Wait(4000);
      Off(OUT_AC);
      avl();
      //klar
}

inline int paket3()    // Höger 2.5m tvärs över väggen
{
     Precedes(turnrightA, turnrightC);
     OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
     Wait(4000);
     Off(OUT_AC);
     Precedes(turnaroundA, turnaroundC);
     //Åk rakt fram tills vägg
     //Dropoff
}

inline int paket4()   // Vänster 2.5m tvärs över väggen
{
     Precedes(turnleftA, turnleftC);
     OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
     Wait(4000);
     Off(OUT_AC);
     Precedes(turnaroundA, turnaroundC);
     //Åk rakt fram tills vägg
     //Dropoff
}


task main()
{

     SetSensorLowspeed(IN_4);
     hitta();
     paket1();
     Precedes(turnrightA, turnrightC);
     Off(OUT_AC);
     Precedes(turnleftA, turnleftC);
     Off(OUT_AC);
     Wait(2000);
}

