
#include "NXCDefs.h"
#define NEAR 15 //cm
#define __NOTETIME   10
#define __WAITTIME   12

int val = 0;
mutex moveMutex;
 /*Turns robot to the left 90degrees*/
/* task waiting()
 {
      Wait(4000);
     Break;
 }
 task counting()
 {
    while(true)
    if(sensor==1)
    {
    val++
    Wait(300);
    }
 } */



inline int move_fwd()
{
int i;
 OnFwdReg(OUT_AC, 75, OUT_REGMODE_SYNC);
 i = SensorUS(IN_4);
 while(i>40)
 {
 i = SensorUS(IN_4);

 }
 Off(OUT_AC);
}

inline int hitta()
{

    int s=SensorUS(IN_4);
    OnFwd(OUT_A, 50);
    OnRev(OUT_C, 50);
    while(s>60)
    {
    s=SensorUS(IN_4);
    NumOut(4, LCD_LINE1, SensorUS(IN_4));
    }

Off(OUT_AC);

PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);
PlayTone(349,4*__NOTETIME);
Wait(4*__WAITTIME);

 int v=SensorUS(IN_4);

 OnFwd(OUT_A, 50);
 OnRev(OUT_C, 50);
 Wait(200);
 Off(OUT_AC);
 int h=SensorUS(IN_4);

     while(v>h&&v!=h)     //&&v!=h
     {
     PlayTone(523,400);
  Wait(10);
  PlayTone(349,400);
  Wait(10);
  PlayTone(294,400);
  Wait(10);

     OnFwd(OUT_A, 50);
     OnRev(OUT_C, 50);
     Wait(100);
     Off(OUT_AC);
     v = h;
     h = SensorUS(IN_4);
     NumOut(10, LCD_LINE2, v);
     NumOut(10, LCD_LINE3, h);
     }
  

  Off(OUT_AC);
  
  NumOut(10, LCD_LINE2, v);
  NumOut(10, LCD_LINE3, h);
  Wait(2000);

}

inline void avl()//Avlämning av bok
{
       RotateMotor(OUT_B, 20, -150);
       Wait(500);
       OnRevReg(OUT_AC, 50, OUT_REGMODE_SYNC);
       Wait(500);
       Off(OUT_AC);
       RotateMotor(OUT_B, 20, 150);
}

inline void paket1()   // Höger 2.5m
{
PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(294,400);
  Wait(40);
  PlayTone(220,400);
  Wait(40);

     RotateMotor(OUT_A, 75, 720);
     Wait(1000);
PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(392,400);
  Wait(40);
  PlayTone(294,400);
  Wait(40);
  PlayTone(220,400);
  Wait(40);

     RotateMotorEx(OUT_AC, 50, 3000, 0, false, true);
     Wait(1000);
     Off(OUT_AC);
     avl();
    //klar
}

inline int paket2()   // Vänster 2.5m
{
          //Snurra vänster
      OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
      Wait(4000);
      Off(OUT_AC);
      avl();
      //klar
}

inline int paket3()    // Höger 2.5m tvärs över väggen
{
        //snurra höger
     OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
     Wait(4000);
     Off(OUT_AC);
       //snurra runt
     Off(OUT_AC);
     //Åk rakt fram tills vägg
     //Dropoff
}

inline int paket4()   // Vänster 2.5m tvärs över väggen
{
       //Snurra vänster
     OnFwdReg(OUT_AC, 50, OUT_REGMODE_SYNC);
     Wait(4000);
     Off(OUT_AC);
    //Snurra runt
     Off(OUT_AC);
     //Åk rakt fram tills vägg
     //Dropoff
}


task main()
{
     SetSensorLowspeed(IN_4);
     hitta();
     move_fwd();
     paket1();
     Wait(2000);
}

